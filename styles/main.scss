@import './variables.scss';
@import './mixins.scss';
@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Roboto', 'Helvetica', sans-serif;
  color: $dark-color;
  background-color: $light-color;
}

.center {
  @include flex(column, center, center);
  @include centerAbsolutely();

  &,
  * {
    box-sizing: border-box;
  }

  &:hover {
    .box {
      transform: rotateX(-25deg);

      &_side_top_part {
        &-left {
          transform: rotateY($box-opening-rotation * -1);
        }

        &-right {
          transform: translateX($box-size * 0.5) rotateY($box-opening-rotation);
        }
      }
    }

    .content {
      transform: translateY($content-transition-distance * -1);
      opacity: 1;
    }
  }
}

.box {
  &_container {
    width: $box-size;
    height: $box-size;
    perspective: $box-size * 3;
  }

  & {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transform: rotateX(0deg);
    transition: transform $animation-time ease;
  }

  &_logo {
    width: $box-size * 0.5;
    @include centerAbsolutely();
  }

  &_side {
    position: absolute;
    width: $box-size;
    height: $box-size;
    transition: transform $animation-time ease;

    &_front {
      background-color: $box-color;
      transform: rotateY(0deg) translateZ($box-side-offset);
    }

    &_back {
      background-color: $box-strong-color;
      transform: rotateY(180deg) translateZ($box-side-offset);
    }

    &_left {
      background-color: $box-dark-color;
      transform: rotateY(-90deg) translateZ($box-side-offset);
    }

    &_right {
      background-color: $box-dark-color;
      transform: rotateY(90deg) translateZ($box-side-offset);
    }

    &_top {
      transform: rotateX(90deg) translateZ($box-side-offset);
      transform-style: preserve-3d;

      &_part {
        width: $box-size * 0.5;
        background-color: $box-color;

        &-left {
          transform: rotateY(0deg);
          transform-origin: center left;
        }

        &-right {
          transform: translateX($box-size * 0.5) rotateY(0deg);
          transform-origin: center right;
        }
      }
    }
  }
}

.content {
  transform: translateY($content-transition-distance * 1.25) scale(0.25);
  text-align: center;
  opacity: 0;
  transition: all $animation-time * 0.75 ease-in-out;

  &_header {
    color: $accent;
    font-size: $box-size * 0.5;
    font-weight: 700;
    line-height: 1;
    margin: 0;
  }

  &_description,
  &_link {
    font-size: $box-size * 0.0625;
  }

  &_description {
    line-height: 130%;
    margin: 0;
  }

  &_link {
    position: relative;
    display: inline-block;
    margin-top: 0.5em;
    color: $accent;
    font-weight: 500;
    text-decoration: none;

    &::before {
      $line-height: 0.125rem;

      content: '';
      position: absolute;
      bottom: 0;
      width: 10%;
      height: $line-height;
      background-color: $accent;
      border-radius: 0.5rem;
      transition: width 350ms ease;
    }

    &:hover {
      &::before {
        width: 100%;
      }
    }
  }
}

@keyframes leftTopPartOpening {
  100% {
    transform: rotateY($box-opening-rotation * -1);
  }
}

@keyframes rightTopPartOpening {
  100% {
    transform: translateX($box-size * 0.5) rotateY($box-opening-rotation);
  }
}

@keyframes contentAppearing {
  100% {
    transform: translateY($content-transition-distance * -1);
    opacity: 1;
  }
}
